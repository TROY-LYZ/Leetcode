#https://leetcode.com/discuss/general-discussion/786126/python-powerful-ultimate-binary-search-template-solved-many-problems
l = start
r = end
#[l,r]
while l < r-1:
    m = l + (r-l)//2
    if cont:
        l = mid
    else:
        r = mid
#end with l= r-1, we compare l,r



#Minimize k , s.t. condition(k) is True
def condition(value) -> bool:
        pass
left, right = min(search_space), max(search_space)
#[l,r)
while l < r:
    m = l + (r-l)//2
    if condition(mid):
        r = mid
    else:
        l = mid +1
#left is the minimal k satisfying the condition function;
return l or l-1

#max k s.t. contion(k) not True
if not condition(mid):
        r = mid
    else:
        l = mid +1
#left is the minimal k satisfying the condition function;
return l-1

or 
m = l + (r-l+1)//2 = (lo + hi + 1) // 2
    if condition(mid):
        l = mid 
    else:
        r = mid -1 
return l 
